{
	"root":
		{
			"classId": 0,
			"DefaultActionPriority": 2,
			"ActionTendencies": [
				{
					"Action": "Speak(RespondFlirt, EndFlirt, SE(Flirt, Answer), Negative)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Flirt, SELF,[x])" , "DialogueState([x]) = RespondFlirt", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = -10"]
						},
					"Priority": 1
				},
{
					"Action": "Speak(RespondFlirt, EndFlirt, SE(Flirt, Answer), Neutral)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Flirt, SELF,[x])" , "DialogueState([x]) = RespondFlirt", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = 0"]
						},
					"Priority": 1
				},
{
					"Action": "Speak(RespondFlirt, EndFlirt, SE(Flirt, Answer), Positive)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Flirt, SELF,[x])" , "DialogueState([x]) = RespondFlirt", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = 10"]
						},
					"Priority": 1
				},				
				{
					"Action": "Speak(RespondCompliment, EndCompliment, SE(Compliment, Answer), Neutral)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Compliment, SELF,[x])" , "DialogueState([x]) = RespondCompliment", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = 0 "]
						},
					"Priority": 1
				},

{
					"Action": "Speak(RespondCompliment, EndCompliment, SE(Compliment, Answer), Negative)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Compliment, SELF,[x])" , "DialogueState([x]) = RespondCompliment", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = -10"]
						},
					"Priority": 1
				},				
				
					{
					"Action": "Speak(RespondCompliment, EndCompliment, SE(Compliment, Answer), Positive)",
					"Target": "[x]",
					"Conditions":
						{
						    "Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Compliment, SELF,[x])" ,  "DialogueState([x]) = RespondCompliment", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = 10"]
						},
					"Priority": 1
				}, 
				{
					"Action": "Speak(StartFlirt, RespondFlirt, SE(Flirt, Initiate), *)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Flirt, SELF,[x])" , "[volValue] > 0", "DialogueState([x]) = Start", "HasFloor(SELF) = True"]
						},
					"Priority": 0
				}, 
				{
					"Action": "Speak(EndFlirt, Start, SE(Flirt, Finalize),Positive)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Flirt, SELF,[x])" , "DialogueState([x]) = EndFlirt", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = 10"]
						},
						"Priority": 1
				}, 
				{
					"Action": "Speak(EndFlirt, Start, SE(Flirt, Finalize),Neutral)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Flirt, SELF,[x])" , "DialogueState([x]) = EndFlirt", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = 0"]
						},
						"Priority": 1						
				}, 
				{
					"Action": "Speak(EndFlirt, Start, SE(Flirt, Finalize),Negative)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Flirt, SELF,[x])" , "DialogueState([x]) = EndFlirt", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = -10"]
						},
						"Priority": 1
				}, 
				{
					"Action": "Speak(EndCompliment, Start, SE(Compliment, Finalize),Positive)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Compliment, SELF,[x])" , "DialogueState([x]) = EndCompliment", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = 10"]
						}
				},		
				{
					"Action": "Speak(EndCompliment, Start, SE(Compliment, Finalize),Neutral)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Compliment, SELF,[x])" , "DialogueState([x]) = EndCompliment", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = 0"]
						}
				},		
				
				{	"Action": "Speak(EndCompliment, Start, SE(Compliment, Finalize),Negative)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "[volValue] = Volition(Compliment, SELF,[x])" , "DialogueState([x]) = EndCompliment", "HasFloor(SELF) = True", "RoundtoTensMethod([volValue], 1) = -10"]
						}
				},						
				{
					"Action": "Speak(StartCompliment, RespondCompliment, SE(Compliment, Initiate), *)",
					"Target": "[x]",
					"Conditions":
						{
							"Set": ["IsAgent([x]) = true", "[x] != SELF", "Volition(Compliment, SELF,[x]) > 0", "DialogueState([x]) = Start", "HasFloor(SELF) = True"]
						},
					"Priority": 0
				}]
		},
	"types": [
		{
			"TypeId": 0,
			"ClassName": "EmotionalDecisionMaking.EmotionalDecisionMakingAsset, EmotionalDecisionMaking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
		}]
}